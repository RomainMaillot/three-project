{"id":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","dependencies":[{"name":"/Applications/Cours/H2/dev/three-project/package.json","includedInParent":true,"mtime":1548164082730},{"name":"/Applications/Cours/H2/dev/three-project/node_modules/postprocessing/package.json","includedInParent":true,"mtime":1548164412950},{"name":"three","loc":{"line":1,"column":49},"parent":"/Applications/Cours/H2/dev/three-project/node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","resolved":"/Applications/Cours/H2/dev/three-project/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorEdgesMaterial = void 0;\n\nvar _three = require(\"three\");\n\nconst fragment = \"uniform sampler2D inputBuffer;\\r\\n\\r\\nvarying vec2 vUv;\\r\\n\\r\\nvarying vec2 vUv0;\\r\\nvarying vec2 vUv1;\\r\\nvarying vec2 vUv2;\\r\\nvarying vec2 vUv3;\\r\\nvarying vec2 vUv4;\\r\\nvarying vec2 vUv5;\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n\\tconst vec2 threshold = vec2(EDGE_THRESHOLD);\\r\\n\\r\\n\\t// Calculate color deltas.\\r\\n\\tvec4 delta;\\r\\n\\tvec3 c = texture2D(inputBuffer, vUv).rgb;\\r\\n\\r\\n\\tvec3 cLeft = texture2D(inputBuffer, vUv0).rgb;\\r\\n\\tvec3 t = abs(c - cLeft);\\r\\n\\tdelta.x = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\tvec3 cTop = texture2D(inputBuffer, vUv1).rgb;\\r\\n\\tt = abs(c - cTop);\\r\\n\\tdelta.y = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\t// Use a threshold to detect significant color edges.\\r\\n\\tvec2 edges = step(threshold, delta.xy);\\r\\n\\r\\n\\t// Discard if there is no edge.\\r\\n\\tif(dot(edges, vec2(1.0)) == 0.0) {\\r\\n\\r\\n\\t\\tdiscard;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Calculate right and bottom deltas.\\r\\n\\tvec3 cRight = texture2D(inputBuffer, vUv2).rgb;\\r\\n\\tt = abs(c - cRight);\\r\\n\\tdelta.z = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\tvec3 cBottom = texture2D(inputBuffer, vUv3).rgb;\\r\\n\\tt = abs(c - cBottom);\\r\\n\\tdelta.w = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\t// Calculate the maximum delta in the direct neighborhood.\\r\\n\\tfloat maxDelta = max(max(max(delta.x, delta.y), delta.z), delta.w);\\r\\n\\r\\n\\t// Calculate left-left and top-top deltas.\\r\\n\\tvec3 cLeftLeft = texture2D(inputBuffer, vUv4).rgb;\\r\\n\\tt = abs(c - cLeftLeft);\\r\\n\\tdelta.z = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\tvec3 cTopTop = texture2D(inputBuffer, vUv5).rgb;\\r\\n\\tt = abs(c - cTopTop);\\r\\n\\tdelta.w = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\t// Calculate the final maximum delta.\\r\\n\\tmaxDelta = max(max(maxDelta, delta.z), delta.w);\\r\\n\\r\\n\\t// Local contrast adaptation.\\r\\n\\tedges *= step(0.5 * maxDelta, delta.xy);\\r\\n\\r\\n\\tgl_FragColor = vec4(edges, 0.0, 0.0);\\r\\n\\r\\n}\\r\\n\";\nconst vertex = \"uniform vec2 texelSize;\\r\\n\\r\\nvarying vec2 vUv;\\r\\n\\r\\nvarying vec2 vUv0;\\r\\nvarying vec2 vUv1;\\r\\nvarying vec2 vUv2;\\r\\nvarying vec2 vUv3;\\r\\nvarying vec2 vUv4;\\r\\nvarying vec2 vUv5;\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n\\tvUv = uv;\\r\\n\\r\\n\\t// Left and top texel coordinates.\\r\\n\\tvUv0 = uv + texelSize * vec2(-1.0, 0.0);\\r\\n\\tvUv1 = uv + texelSize * vec2(0.0, 1.0);\\r\\n\\r\\n\\t// Right and bottom texel coordinates.\\r\\n\\tvUv2 = uv + texelSize * vec2(1.0, 0.0);\\r\\n\\tvUv3 = uv + texelSize * vec2(0.0, -1.0);\\r\\n\\r\\n\\t// Left-left and top-top texel coordinates.\\r\\n\\tvUv4 = uv + texelSize * vec2(-2.0, 0.0);\\r\\n\\tvUv5 = uv + texelSize * vec2(0.0, 2.0);\\r\\n\\r\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\r\\n\\r\\n}\\r\\n\";\n/**\r\n * A material that detects edges in a color texture.\r\n *\r\n * Mainly used for Subpixel Morphological Antialiasing.\r\n */\n\nclass ColorEdgesMaterial extends _three.ShaderMaterial {\n  /**\r\n   * Constructs a new color edges material.\r\n   *\r\n   * @param {Vector2} [texelSize] - The absolute screen texel size.\r\n   */\n  constructor(texelSize = new _three.Vector2()) {\n    super({\n      type: \"ColorEdgesMaterial\",\n      defines: {\n        EDGE_THRESHOLD: \"0.1\"\n      },\n      uniforms: {\n        inputBuffer: new _three.Uniform(null),\n        texelSize: new _three.Uniform(texelSize)\n      },\n      fragmentShader: fragment,\n      vertexShader: vertex,\n      depthWrite: false,\n      depthTest: false\n    });\n  }\n  /**\r\n   * Sets the edge detection sensitivity.\r\n   *\r\n   * A lower value results in more edges being detected at the expense of\r\n   * performance.\r\n   *\r\n   * 0.1 is a reasonable value, and allows to catch most visible edges.\r\n   * 0.05 is a rather overkill value, that allows to catch 'em all.\r\n   *\r\n   * If temporal supersampling is used, 0.2 could be a reasonable value,\r\n   * as low contrast edges are properly filtered by just 2x.\r\n   *\r\n   * @param {Number} threshold - The edge detection sensitivity. Range: [0.05, 0.5].\r\n   */\n\n\n  setEdgeDetectionThreshold(threshold) {\n    this.defines.EDGE_THRESHOLD = threshold.toFixed(\"2\");\n    this.needsUpdate = true;\n  }\n\n}\n\nexports.ColorEdgesMaterial = ColorEdgesMaterial;","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":3,"column":0}},{"name":"fragment","generated":{"line":10,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":3,"column":6}},{"generated":{"line":10,"column":14},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":3,"column":14}},{"generated":{"line":10,"column":17},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":3,"column":17}},{"generated":{"line":10,"column":1830},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":4,"column":0}},{"name":"vertex","generated":{"line":11,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":4,"column":6}},{"generated":{"line":11,"column":12},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":4,"column":12}},{"generated":{"line":11,"column":15},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":4,"column":15}},{"generated":{"line":11,"column":753},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":4,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":12,"column":7}},{"name":"ColorEdgesMaterial","generated":{"line":18,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":12,"column":13}},{"generated":{"line":18,"column":24},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":12,"column":7}},{"name":"ShaderMaterial","generated":{"line":18,"column":33},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":12,"column":40}},{"generated":{"line":18,"column":54},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":12,"column":7}},{"generated":{"line":18,"column":55},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":12,"column":55}},{"generated":{"line":19,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":14,"column":1}},{"name":"constructor","generated":{"line":24,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":1}},{"name":"constructor","generated":{"line":24,"column":2},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":1}},{"generated":{"line":24,"column":13},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":12}},{"name":"texelSize","generated":{"line":24,"column":14},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":13}},{"generated":{"line":24,"column":23},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":22}},{"generated":{"line":24,"column":26},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":25}},{"name":"Vector2","generated":{"line":24,"column":30},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":29}},{"generated":{"line":24,"column":44},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":25}},{"generated":{"line":24,"column":46},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":12}},{"generated":{"line":24,"column":48},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":20,"column":40}},{"generated":{"line":25,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":2}},{"generated":{"line":25,"column":10},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":8}},{"name":"type","generated":{"line":26,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":24,"column":3}},{"name":"type","generated":{"line":26,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":24,"column":3}},{"generated":{"line":26,"column":10},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":24,"column":7}},{"generated":{"line":26,"column":12},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":24,"column":9}},{"generated":{"line":26,"column":32},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":8}},{"name":"defines","generated":{"line":27,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":26,"column":3}},{"name":"defines","generated":{"line":27,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":26,"column":3}},{"generated":{"line":27,"column":13},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":26,"column":10}},{"generated":{"line":27,"column":15},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":26,"column":12}},{"name":"EDGE_THRESHOLD","generated":{"line":28,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":28,"column":4}},{"name":"EDGE_THRESHOLD","generated":{"line":28,"column":8},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":28,"column":4}},{"generated":{"line":28,"column":22},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":28,"column":18}},{"generated":{"line":28,"column":24},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":28,"column":20}},{"generated":{"line":29,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":26,"column":12}},{"generated":{"line":29,"column":7},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":8}},{"name":"uniforms","generated":{"line":30,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":32,"column":3}},{"name":"uniforms","generated":{"line":30,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":32,"column":3}},{"generated":{"line":30,"column":14},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":32,"column":11}},{"generated":{"line":30,"column":16},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":32,"column":13}},{"name":"inputBuffer","generated":{"line":31,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":34,"column":4}},{"name":"inputBuffer","generated":{"line":31,"column":8},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":34,"column":4}},{"generated":{"line":31,"column":19},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":34,"column":15}},{"generated":{"line":31,"column":21},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":34,"column":17}},{"name":"Uniform","generated":{"line":31,"column":25},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":34,"column":21}},{"generated":{"line":31,"column":39},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":34,"column":17}},{"generated":{"line":31,"column":40},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":34,"column":29}},{"generated":{"line":31,"column":44},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":34,"column":17}},{"generated":{"line":31,"column":45},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":32,"column":13}},{"name":"texelSize","generated":{"line":32,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":35,"column":4}},{"name":"texelSize","generated":{"line":32,"column":8},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":35,"column":4}},{"generated":{"line":32,"column":17},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":35,"column":13}},{"generated":{"line":32,"column":19},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":35,"column":15}},{"name":"Uniform","generated":{"line":32,"column":23},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":35,"column":19}},{"generated":{"line":32,"column":37},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":35,"column":15}},{"name":"texelSize","generated":{"line":32,"column":38},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":35,"column":27}},{"generated":{"line":32,"column":47},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":35,"column":15}},{"generated":{"line":33,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":32,"column":13}},{"generated":{"line":33,"column":7},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":8}},{"name":"fragmentShader","generated":{"line":34,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":39,"column":3}},{"name":"fragmentShader","generated":{"line":34,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":39,"column":3}},{"generated":{"line":34,"column":20},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":39,"column":17}},{"name":"fragment","generated":{"line":34,"column":22},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":39,"column":19}},{"generated":{"line":34,"column":30},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":8}},{"name":"vertexShader","generated":{"line":35,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":40,"column":3}},{"name":"vertexShader","generated":{"line":35,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":40,"column":3}},{"generated":{"line":35,"column":18},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":40,"column":15}},{"name":"vertex","generated":{"line":35,"column":20},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":40,"column":17}},{"generated":{"line":35,"column":26},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":8}},{"name":"depthWrite","generated":{"line":36,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":42,"column":3}},{"name":"depthWrite","generated":{"line":36,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":42,"column":3}},{"generated":{"line":36,"column":16},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":42,"column":13}},{"generated":{"line":36,"column":18},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":42,"column":15}},{"generated":{"line":36,"column":23},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":8}},{"name":"depthTest","generated":{"line":37,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":43,"column":3}},{"name":"depthTest","generated":{"line":37,"column":6},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":43,"column":3}},{"generated":{"line":37,"column":15},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":43,"column":12}},{"generated":{"line":37,"column":17},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":43,"column":14}},{"generated":{"line":38,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":8}},{"generated":{"line":38,"column":5},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":22,"column":2}},{"generated":{"line":39,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":47,"column":2}},{"generated":{"line":40,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":49,"column":1}},{"name":"setEdgeDetectionThreshold","generated":{"line":56,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":64,"column":1}},{"name":"setEdgeDetectionThreshold","generated":{"line":56,"column":2},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":64,"column":1}},{"generated":{"line":56,"column":27},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":64,"column":26}},{"name":"threshold","generated":{"line":56,"column":28},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":64,"column":27}},{"generated":{"line":56,"column":37},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":64,"column":26}},{"generated":{"line":56,"column":39},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":64,"column":38}},{"generated":{"line":57,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":2}},{"name":"defines","generated":{"line":57,"column":9},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":7}},{"generated":{"line":57,"column":16},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":2}},{"name":"EDGE_THRESHOLD","generated":{"line":57,"column":17},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":15}},{"generated":{"line":57,"column":31},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":2}},{"name":"threshold","generated":{"line":57,"column":34},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":32}},{"generated":{"line":57,"column":43},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":41}},{"name":"toFixed","generated":{"line":57,"column":44},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":42}},{"generated":{"line":57,"column":51},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":32}},{"generated":{"line":57,"column":52},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":50}},{"generated":{"line":57,"column":55},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":32}},{"generated":{"line":57,"column":56},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":66,"column":2}},{"generated":{"line":58,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":67,"column":2}},{"name":"needsUpdate","generated":{"line":58,"column":9},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":67,"column":7}},{"generated":{"line":58,"column":20},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":67,"column":2}},{"generated":{"line":58,"column":23},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":67,"column":21}},{"generated":{"line":58,"column":27},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":67,"column":2}},{"generated":{"line":59,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":69,"column":2}},{"generated":{"line":61,"column":0},"source":"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js","original":{"line":12,"column":55}}],"sources":{"../node_modules/postprocessing/src/materials/ColorEdgesMaterial.js":"import { ShaderMaterial, Uniform, Vector2 } from \"three\";\r\n\r\nconst fragment = \"uniform sampler2D inputBuffer;\\r\\n\\r\\nvarying vec2 vUv;\\r\\n\\r\\nvarying vec2 vUv0;\\r\\nvarying vec2 vUv1;\\r\\nvarying vec2 vUv2;\\r\\nvarying vec2 vUv3;\\r\\nvarying vec2 vUv4;\\r\\nvarying vec2 vUv5;\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n\\tconst vec2 threshold = vec2(EDGE_THRESHOLD);\\r\\n\\r\\n\\t// Calculate color deltas.\\r\\n\\tvec4 delta;\\r\\n\\tvec3 c = texture2D(inputBuffer, vUv).rgb;\\r\\n\\r\\n\\tvec3 cLeft = texture2D(inputBuffer, vUv0).rgb;\\r\\n\\tvec3 t = abs(c - cLeft);\\r\\n\\tdelta.x = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\tvec3 cTop = texture2D(inputBuffer, vUv1).rgb;\\r\\n\\tt = abs(c - cTop);\\r\\n\\tdelta.y = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\t// Use a threshold to detect significant color edges.\\r\\n\\tvec2 edges = step(threshold, delta.xy);\\r\\n\\r\\n\\t// Discard if there is no edge.\\r\\n\\tif(dot(edges, vec2(1.0)) == 0.0) {\\r\\n\\r\\n\\t\\tdiscard;\\r\\n\\r\\n\\t}\\r\\n\\r\\n\\t// Calculate right and bottom deltas.\\r\\n\\tvec3 cRight = texture2D(inputBuffer, vUv2).rgb;\\r\\n\\tt = abs(c - cRight);\\r\\n\\tdelta.z = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\tvec3 cBottom = texture2D(inputBuffer, vUv3).rgb;\\r\\n\\tt = abs(c - cBottom);\\r\\n\\tdelta.w = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\t// Calculate the maximum delta in the direct neighborhood.\\r\\n\\tfloat maxDelta = max(max(max(delta.x, delta.y), delta.z), delta.w);\\r\\n\\r\\n\\t// Calculate left-left and top-top deltas.\\r\\n\\tvec3 cLeftLeft = texture2D(inputBuffer, vUv4).rgb;\\r\\n\\tt = abs(c - cLeftLeft);\\r\\n\\tdelta.z = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\tvec3 cTopTop = texture2D(inputBuffer, vUv5).rgb;\\r\\n\\tt = abs(c - cTopTop);\\r\\n\\tdelta.w = max(max(t.r, t.g), t.b);\\r\\n\\r\\n\\t// Calculate the final maximum delta.\\r\\n\\tmaxDelta = max(max(maxDelta, delta.z), delta.w);\\r\\n\\r\\n\\t// Local contrast adaptation.\\r\\n\\tedges *= step(0.5 * maxDelta, delta.xy);\\r\\n\\r\\n\\tgl_FragColor = vec4(edges, 0.0, 0.0);\\r\\n\\r\\n}\\r\\n\";\r\nconst vertex = \"uniform vec2 texelSize;\\r\\n\\r\\nvarying vec2 vUv;\\r\\n\\r\\nvarying vec2 vUv0;\\r\\nvarying vec2 vUv1;\\r\\nvarying vec2 vUv2;\\r\\nvarying vec2 vUv3;\\r\\nvarying vec2 vUv4;\\r\\nvarying vec2 vUv5;\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n\\tvUv = uv;\\r\\n\\r\\n\\t// Left and top texel coordinates.\\r\\n\\tvUv0 = uv + texelSize * vec2(-1.0, 0.0);\\r\\n\\tvUv1 = uv + texelSize * vec2(0.0, 1.0);\\r\\n\\r\\n\\t// Right and bottom texel coordinates.\\r\\n\\tvUv2 = uv + texelSize * vec2(1.0, 0.0);\\r\\n\\tvUv3 = uv + texelSize * vec2(0.0, -1.0);\\r\\n\\r\\n\\t// Left-left and top-top texel coordinates.\\r\\n\\tvUv4 = uv + texelSize * vec2(-2.0, 0.0);\\r\\n\\tvUv5 = uv + texelSize * vec2(0.0, 2.0);\\r\\n\\r\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\r\\n\\r\\n}\\r\\n\";\r\n\r\n/**\r\n * A material that detects edges in a color texture.\r\n *\r\n * Mainly used for Subpixel Morphological Antialiasing.\r\n */\r\n\r\nexport class ColorEdgesMaterial extends ShaderMaterial {\r\n\r\n\t/**\r\n\t * Constructs a new color edges material.\r\n\t *\r\n\t * @param {Vector2} [texelSize] - The absolute screen texel size.\r\n\t */\r\n\r\n\tconstructor(texelSize = new Vector2()) {\r\n\r\n\t\tsuper({\r\n\r\n\t\t\ttype: \"ColorEdgesMaterial\",\r\n\r\n\t\t\tdefines: {\r\n\r\n\t\t\t\tEDGE_THRESHOLD: \"0.1\"\r\n\r\n\t\t\t},\r\n\r\n\t\t\tuniforms: {\r\n\r\n\t\t\t\tinputBuffer: new Uniform(null),\r\n\t\t\t\ttexelSize: new Uniform(texelSize)\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfragmentShader: fragment,\r\n\t\t\tvertexShader: vertex,\r\n\r\n\t\t\tdepthWrite: false,\r\n\t\t\tdepthTest: false\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the edge detection sensitivity.\r\n\t *\r\n\t * A lower value results in more edges being detected at the expense of\r\n\t * performance.\r\n\t *\r\n\t * 0.1 is a reasonable value, and allows to catch most visible edges.\r\n\t * 0.05 is a rather overkill value, that allows to catch 'em all.\r\n\t *\r\n\t * If temporal supersampling is used, 0.2 could be a reasonable value,\r\n\t * as low contrast edges are properly filtered by just 2x.\r\n\t *\r\n\t * @param {Number} threshold - The edge detection sensitivity. Range: [0.05, 0.5].\r\n\t */\r\n\r\n\tsetEdgeDetectionThreshold(threshold) {\r\n\r\n\t\tthis.defines.EDGE_THRESHOLD = threshold.toFixed(\"2\");\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n"},"lineCount":null}},"hash":"362effcbe8d5d2273dbc004b81b14495","cacheData":{"env":{}}}